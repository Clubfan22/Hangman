/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HangmanBean.java
 *
 * Created on 13.06.2011, 17:18:12
 */
package hangman;

import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Ammon
 */
public class HangmanBean extends javax.swing.JLabel {
    Icon icon;

    /** Creates new form HangmanBean */
    public HangmanBean() {
        initComponents();
    }
    public void setImage(int number) {
        switch(number) {
            case 1: Image source = new ImageIcon(getClass().getResource("/hangman/ressources/huegel.png")).getImage();
                       Image scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       Icon scaledIcon = new ImageIcon(scaledImage);
                       this.setIcon(scaledIcon);
                       break;
               case 2:
                   source = new ImageIcon(getClass().getResource("/hangman/ressources/pfosten.png")).getImage();
                   scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                   scaledIcon = new ImageIcon(scaledImage);
                   jLabel1.setIcon(scaledIcon);
                   break;
               case 3: source = new ImageIcon(getClass().getResource("/hangman/ressources/latte.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       this.setIcon(scaledIcon);
                       break;
               case 4: source = new ImageIcon(getClass().getResource("/hangman/ressources/strick.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       this.setIcon(scaledIcon);
                       break;
               case 5: source = new ImageIcon(getClass().getResource("/hangman/ressources/kopf.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       this.setIcon(scaledIcon);
                       break;
               case 6: source = new ImageIcon(getClass().getResource("/hangman/ressources/koerper.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       jLabel1.setIcon(scaledIcon);
                       break;
               case 7:source = new ImageIcon(getClass().getResource("/hangman/ressources/arm1.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       jLabel1.setIcon(scaledIcon);
                       break;
               case 8: source = new ImageIcon(getClass().getResource("/hangman/ressources/arm2.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       jLabel1.setIcon(scaledIcon);
                       break;
               case 9: source = new ImageIcon(getClass().getResource("/hangman/ressources/fuss1.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       jLabel1.setIcon(scaledIcon);
                       break;
               case 10: source = new ImageIcon(getClass().getResource("/hangman/ressources/fuss2.png")).getImage();
                       scaledImage = source.getScaledInstance(320,480,Image.SCALE_SMOOTH);
                       scaledIcon = new ImageIcon(scaledImage);
                       jLabel1.setIcon(scaledIcon);
                       winopen("Verloren!!!");
                       clicks=0;
        }
    }
    public Icon getImage() {
        return icon;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

    }
    // </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
